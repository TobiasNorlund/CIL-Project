%!PS-Adobe-3.0 EPSF-3.0
%%Creator: MATLAB, The MathWorks, Inc. Version 8.1.0.604 (R2013a). Operating System: Microsoft Windows 8.
%%Title: C:\Users\Tobias\Documents\GitHub\CIL-Project\results.eps
%%CreationDate: 06/15/2015  21:22:30
%%DocumentNeededFonts: Helvetica
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox:    11   240   583   601
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/ISOLatin1Encoding where {pop /WindowsLatin1Encoding 256 array bdef
ISOLatin1Encoding WindowsLatin1Encoding copy pop
/.notdef/.notdef/quotesinglbase/florin/quotedblbase/ellipsis/dagger
/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE/.notdef/.notdef
/.notdef/.notdef/quoteleft/quoteright/quotedblleft/quotedblright/bullet
/endash/emdash/tilde/trademark/scaron/guilsinglright/oe/.notdef/.notdef
/Ydieresis WindowsLatin1Encoding 128 32 getinterval astore pop}
{/WindowsLatin1Encoding StandardEncoding bdef} ifelse
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile 
  3 index 0 eq {/ASCIIHexDecode filter}
  {/ASCII85Decode filter 3 index 2 eq {/RunLengthDecode filter} if }
  ifelse exch readstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:    11   240   583   601
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode 0132 7212 csm

    0     0  6864  4322 rc
86 dict begin %Colortable dictionary
/c0 { 0.000000 0.000000 0.000000 sr} bdef
/c1 { 1.000000 1.000000 1.000000 sr} bdef
/c2 { 0.900000 0.000000 0.000000 sr} bdef
/c3 { 0.000000 0.820000 0.000000 sr} bdef
/c4 { 0.000000 0.000000 0.800000 sr} bdef
/c5 { 0.910000 0.820000 0.320000 sr} bdef
/c6 { 1.000000 0.260000 0.820000 sr} bdef
/c7 { 0.000000 0.820000 0.820000 sr} bdef
c0
1 j
1 sg
   0    0 6865 4323 rf
6 w
0 3523 5320 0 0 -3523 892 3847 4 MP
PP
-5320 0 0 3523 5320 0 0 -3523 892 3847 5 MP stroke
4 w
DO
SO
6 w
0 sg
 892  324 mt 6212  324 L
 892 3847 mt 6212 3847 L
6212 3847 mt 6212  324 L
 892 3847 mt  892  324 L
 892 3847 mt 6212 3847 L
 892 3847 mt  892  324 L
2131 3847 mt 2131 3820 L
2131  324 mt 2131  350 L
2050 3847 mt 2050 3820 L
2050  324 mt 2050  350 L
1959 3847 mt 1959 3820 L
1959  324 mt 1959  350 L
1856 3847 mt 1856 3820 L
1856  324 mt 1856  350 L
1738 3847 mt 1738 3820 L
1738  324 mt 1738  350 L
1597 3847 mt 1597 3820 L
1597  324 mt 1597  350 L
1425 3847 mt 1425 3820 L
1425  324 mt 1425  350 L
1204 3847 mt 1204 3820 L
1204  324 mt 1204  350 L
 892 3847 mt  892 3820 L
 892  324 mt  892  350 L
2131 3847 mt 2131 3793 L
2131  324 mt 2131  377 L
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 120 FMSR

2043 4029 mt 
(10) s
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 80 FMSR

2176 3955 mt 
(1) s
2665 3847 mt 2665 3820 L
2665  324 mt 2665  350 L
2977 3847 mt 2977 3820 L
2977  324 mt 2977  350 L
3199 3847 mt 3199 3820 L
3199  324 mt 3199  350 L
3371 3847 mt 3371 3820 L
3371  324 mt 3371  350 L
3511 3847 mt 3511 3820 L
3511  324 mt 3511  350 L
3630 3847 mt 3630 3820 L
3630  324 mt 3630  350 L
3732 3847 mt 3732 3820 L
3732  324 mt 3732  350 L
3823 3847 mt 3823 3820 L
3823  324 mt 3823  350 L
3904 3847 mt 3904 3820 L
3904  324 mt 3904  350 L
3904 3847 mt 3904 3793 L
3904  324 mt 3904  377 L
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 120 FMSR

3816 4029 mt 
(10) s
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 80 FMSR

3949 3955 mt 
(2) s
4438 3847 mt 4438 3820 L
4438  324 mt 4438  350 L
4750 3847 mt 4750 3820 L
4750  324 mt 4750  350 L
4972 3847 mt 4972 3820 L
4972  324 mt 4972  350 L
5144 3847 mt 5144 3820 L
5144  324 mt 5144  350 L
5284 3847 mt 5284 3820 L
5284  324 mt 5284  350 L
5403 3847 mt 5403 3820 L
5403  324 mt 5403  350 L
5506 3847 mt 5506 3820 L
5506  324 mt 5506  350 L
5597 3847 mt 5597 3820 L
5597  324 mt 5597  350 L
5678 3847 mt 5678 3820 L
5678  324 mt 5678  350 L
5678 3847 mt 5678 3793 L
5678  324 mt 5678  377 L
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 120 FMSR

5590 4029 mt 
(10) s
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 80 FMSR

5723 3955 mt 
(3) s
6212 3847 mt 6212 3820 L
6212  324 mt 6212  350 L
 892 3847 mt  945 3847 L
6212 3847 mt 6158 3847 L
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 120 FMSR

 691 3891 mt 
(0.8) s
 892 3494 mt  945 3494 L
6212 3494 mt 6158 3494 L
 624 3538 mt 
(0.85) s
 892 3142 mt  945 3142 L
6212 3142 mt 6158 3142 L
 691 3186 mt 
(0.9) s
 892 2790 mt  945 2790 L
6212 2790 mt 6158 2790 L
 624 2834 mt 
(0.95) s
 892 2437 mt  945 2437 L
6212 2437 mt 6158 2437 L
 791 2481 mt 
(1) s
 892 2085 mt  945 2085 L
6212 2085 mt 6158 2085 L
 624 2129 mt 
(1.05) s
 892 1733 mt  945 1733 L
6212 1733 mt 6158 1733 L
 691 1777 mt 
(1.1) s
 892 1380 mt  945 1380 L
6212 1380 mt 6158 1380 L
 624 1424 mt 
(1.15) s
 892 1028 mt  945 1028 L
6212 1028 mt 6158 1028 L
 691 1072 mt 
(1.2) s
 892  676 mt  945  676 L
6212  676 mt 6158  676 L
 624  720 mt 
(1.25) s
 892  324 mt  945  324 L
6212  324 mt 6158  324 L
 691  368 mt 
(1.3) s
 892  324 mt 6212  324 L
 892 3847 mt 6212 3847 L
6212 3847 mt 6212  324 L
 892 3847 mt  892  324 L
gs 892 324 5321 3524 rc
24 w
1 0 16 0 16 1 16 0 17 1 17 1 17 1 18 1 
18 1 18 2 19 1 20 2 20 2 20 3 21 3 22 3 
23 3 23 5 23 4 25 5 25 6 26 7 27 8 28 8 
29 10 30 11 32 12 33 14 34 16 36 17 37 21 40 23 
41 26 44 30 47 34 50 37 53 42 57 46 62 53 67 58 
73 67 81 78 91 92 103 115 118 147 141 194 172 275 221 529 
46 222 3999 324 50 MP stroke
DA
6 w
1 0 16 1 16 1 16 1 17 1 17 1 17 1 18 2 
18 2 18 2 19 3 20 2 20 3 20 4 21 4 22 4 
23 5 23 6 23 6 25 7 25 8 26 9 27 10 28 11 
29 13 30 14 32 16 33 18 34 20 36 22 37 26 40 28 
41 33 44 36 47 40 50 44 53 50 57 54 62 61 67 67 
73 76 81 87 91 103 103 126 118 160 141 207 172 288 221 540 
65 321 3980 324 50 MP stroke
SO
24 w
/c8 { 0.000000 0.000000 1.000000 sr} bdef
c8
1847 0 31 0 31 0 33 0 34 0 36 0 38 0 39 0 
42 0 44 0 46 1 50 1 53 1 57 2 62 2 67 4 
73 5 81 5 91 7 103 8 119 11 140 14 172 19 222 28 
312 104 534 1267 1856 1087 27 MP stroke
DA
6 w
1847 0 31 0 31 0 33 0 34 0 36 0 38 0 39 0 
42 1 44 0 46 1 50 1 53 1 57 2 62 2 67 3 
73 3 81 5 91 5 103 7 119 10 140 16 172 25 222 46 
312 182 534 1556 1856 1135 27 MP stroke
SO
24 w
/c9 { 0.000000 1.000000 0.000000 sr} bdef
c9
2702 4 26 4 27 4 28 4 29 4 30 5 32 5 33 5 
34 5 36 6 37 6 40 7 41 7 45 7 46 9 50 8 
53 10 57 10 62 12 67 13 73 15 81 17 91 19 103 24 
119 30 140 39 172 56 221 85 313 153 533 321 892 1158 31 MP stroke
DA
6 w
2702 5 26 5 27 5 28 5 29 6 30 6 32 6 33 7 
34 7 36 7 37 8 40 8 41 9 45 9 46 10 50 11 
53 11 57 13 62 14 67 16 73 17 81 20 91 22 103 28 
119 33 140 43 172 60 221 91 313 159 533 328 892 1157 31 MP stroke
SO
24 w
/c10 { 1.000000 0.000000 0.000000 sr} bdef
c10
2324 2 16 1 16 2 17 2 17 1 17 2 18 3 18 2 
18 2 20 3 19 3 20 3 21 3 21 4 21 3 23 4 
23 5 23 5 25 5 25 5 26 6 27 7 28 7 29 7 
30 9 32 9 33 9 34 11 36 12 37 13 40 14 41 15 
45 17 46 19 50 21 53 23 57 27 62 29 67 33 73 38 
81 44 91 50 103 58 119 69 140 82 172 99 221 123 313 153 
533 238 892 1006 50 MP stroke
DA
6 w
2324 3 16 2 16 3 17 2 17 3 17 2 18 3 18 3 
18 3 20 3 19 3 20 3 21 4 21 3 21 4 23 4 
23 4 23 4 25 4 25 5 26 5 27 5 28 6 29 6 
30 6 32 7 33 7 34 8 36 9 37 9 40 11 41 11 
45 12 46 14 50 15 53 18 57 19 62 21 67 25 73 28 
81 32 91 38 103 44 119 53 140 63 172 77 221 97 313 125 
533 217 892 1656 50 MP stroke
gr

c10
DA
0 sg
3331 4172 mt 
(Time \(s\)) s
 542 2259 mt  -90 rotate
(RMSE) s
90 rotate
 875 3890 mt 
( ) s
6196  366 mt 
( ) s
SO
1 sg
0 1210 1291 0 0 -1210 4861 1594 4 MP
PP
-1291 0 0 1210 1291 0 0 -1210 4861 1594 5 MP stroke
4 w
DO
SO
6 w
0 sg
4861  384 mt 6152  384 L
4861 1594 mt 6152 1594 L
6152 1594 mt 6152  384 L
4861 1594 mt 4861  384 L
4861 1594 mt 6152 1594 L
4861 1594 mt 4861  384 L
4861  384 mt 6152  384 L
4861 1594 mt 6152 1594 L
6152 1594 mt 6152  384 L
4861 1594 mt 4861  384 L
5331  518 mt 
(SGD \(test\)) s
gs 4861 384 1292 1211 rc
24 w
361 0 4933 475 2 MP stroke
gr

24 w
5331  665 mt 
(SGD \(train\)) s
gs 4861 384 1292 1211 rc
DA
6 w
361 0 4933 622 2 MP stroke
SO
gr

6 w
5331  811 mt 
(ALS \(test\)) s
gs 4861 384 1292 1211 rc
24 w
c8
361 0 4933 769 2 MP stroke
gr

24 w
c8
0 sg
5331  958 mt 
(ALS \(train\)) s
gs 4861 384 1292 1211 rc
DA
6 w
c8
361 0 4933 915 2 MP stroke
SO
gr

6 w
c8
0 sg
5331 1105 mt 
(EMNMF \(test\)) s
gs 4861 384 1292 1211 rc
24 w
c9
361 0 4933 1062 2 MP stroke
gr

24 w
c9
0 sg
5331 1252 mt 
(EMNMF \(train\)) s
gs 4861 384 1292 1211 rc
DA
6 w
c9
361 0 4933 1209 2 MP stroke
SO
gr

6 w
c9
0 sg
5331 1398 mt 
(WNMF \(test\)) s
gs 4861 384 1292 1211 rc
24 w
c10
361 0 4933 1355 2 MP stroke
gr

24 w
c10
0 sg
5331 1545 mt 
(WNMF \(train\)) s
gs 4861 384 1292 1211 rc
DA
6 w
c10
361 0 4933 1502 2 MP stroke
SO
gr

6 w
c10

end %%Color Dict

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF
